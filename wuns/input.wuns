[constant -1 [quote -1]]
[constant 0 [quote 0]]
[constant 1 [quote 1]]
[constant 2 [quote 2]]
[constant 3 [quote 3]]

[func inc [x] [add x 1]]
[func dec [x] [sub x 1]]

[func not [c] [eq c 0]]

[func is-zero [x] [eq x 0]]

[func is-odd [x] [bitwise-and x 1]]

[func is-even [x] [not [is-odd x]]]

[func is-negative [x] [lt x 0]]

[func abs [x] [if [is-negative x] [sub 0 x] x]]
[func min [a b] [if [lt a b] a b]]
[func max [a b] [if [gt a b] a b]]
[func delta [a b]
  [let [min [if [lt a b] a b]
        max [if [gt a b] a b]]
    [sub max min]]]

[external-func at [form i32] [form]]

[func first [l] [at l 0]]
[func second [l] [at l 1]]
[func third [l] [at l 2]]
[func fourth [l] [at l 3]]
[func last [l] [at l -1]]

[external-func slice [list i32 i32] [list]]
[external-func size [form] [i32]]

[func rest [l] [slice l 1 [size l]]]

[func list [.. l] l]

[constant unit [list]]

[external-func push [mutable-list form] []]

[func push-all [mut-list list]
  [let [s-l [size list]]
    [loop [i 0]
      [if [lt i s-l]
        [let []
          [push mut-list [at list i]]
          [continue i [inc i]]]
        unit]]]]

[external-func mutable-list [] [mutable-list]]
[external-func freeze [mutable-list] [list]]

[func concat-lists [lists]
  [let [res [mutable-list] s [size lists]]
    [loop [i 0]
      [if [lt i s]
        [let []
          [push-all res [at lists i]]
          [continue i [inc i]]]
        [freeze res]]]]]

[func concat [.. lists] [concat-lists lists]]
