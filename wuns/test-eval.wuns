[i32 007] [i32 7]
[i32 -0] [i32 0]
[i32 -1] [i32 -1]
[i32 -01] [i32 -1]
[f64 1.5] [f64 1.5]
[word abc] [word abc]

[[intrinsic instructions i32.add] [i32 2] [i32 3]] [i32 5]
[[intrinsic instructions i32.sub] [i32 8] [i32 3]] [i32 5]

[switch [i32 0]
    [i32 0] [word zero]
    [i32 1] [word one]
    [word not-01]] [word zero]
[switch [i32 1]
    [i32 0] [word zero]
    [i32 1] [word one]
    [word not-01]] [word one]
[switch [i32 10]
    [i32 0] [word zero]
    [i32 1] [word one]
    [word not-01]] [word not-01]

[if [i32 0] [word zero] [word one]] [word one]
[if [i32 1] [word zero] [word one]] [word zero]

[do
  [def x [i32 5]]
  [def y x]
  y]
[i32 5]

[do
  [def f [func f [] [i32 5]]]
  [f]] [i32 5]

[do
  [def f [func f [x] x]]
  [f [i32 5]]] [i32 5]
[do
  [def inc [func inc [x] [[intrinsic instructions i32.add] [i32 1] x]]]
  [def g [func g [x] [inc x]]]
  [g [i32 4]]] [i32 5]

[do
  [def inc [func inc [x] [[intrinsic instructions i32.add] [i32 1] x]]]
  [def g [func g [x] [inc [inc x]]]]
  [g [i32 3]]] [i32 5]

[do
  [def gauss
    [func rec [n]
      [if n
        [[intrinsic instructions i32.add] n [rec [[intrinsic instructions i32.sub] n [i32 1]]]]
        [i32 0]]]]
  [gauss [i32 10]]]
[i32 55]

[do
  [def gauss
    [func rec [n]
      [if n
        [[intrinsic instructions i32.add] n [rec [[intrinsic instructions i32.sub] n [i32 1]]]]
        [i32 0]]]]
  [def gauss-n
    [func rec2 [i]
      [if i
        [[intrinsic instructions i32.add] [gauss [i32 10]] [rec2 [[intrinsic instructions i32.sub] i [i32 1]]]]
        [i32 0]]]]
  [gauss-n [i32 10]]]
[i32 550]
