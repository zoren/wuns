[memory i32 mem 1]

[data active mem [i32 0] [i32 16]]

[defn get-top []
  [intrinsic i32.load mem 0 4 [i32 0]]]

[defn set-top [new-top]
  [intrinsic i32.store mem 0 4 [i32 0] new-top]]

[defn alloc-n [n-bytes]
  [let [top [get-top]]
    [set-top [intrinsic i32.add top n-bytes]]
      top]]

[type linked-list [e]
  [record
    [tail [pointer mem [linked-list e]]]
    [head e]]]

[def list-nil [cast [pointer mem [linked-list a]] [i32 0]]]

[genfn alloc [target-type] []
  [cast [pointer mem target-type] [alloc-n [size-of target-type]]]]

[defn cons [h t]
  [let [p [cast [pointer mem [linked-list a]] [alloc]]]
    [assign [field p head] h]
    [assign [field p tail] t]
    p]]

[defn make-list []
  [cons [i32 1] [cons [i32 2] [cons [i32 3] list-nil]]]]

[genfn head [a] [p [pointer mem [linked-list a]]]
  [deref [field p head]]]

[export get-top set-top alloc-n cons]
