[func fst [x y] x]
[func snd [x y] y]
[func add [x y] [add x y]]
[func sub [x y] [sub x y]]
[func inc [x] [add x [i32 1]]]
[func five [] [i32 5]]
[func ifte [c] [if c [i32 1337] [i32 21]]]
[func ignore [x] []]
[func identity [x] x]
[func id-pair [x] [tuple x x]]
[func pair [x y] [tuple x y]]
[func is-odd [x] [bitwise-and x [i32 1]]]
[func is-even [x] [eq [is-odd x] [i32 0]]]
[func is-negative [x] [lt x [i32 0]]]
[func ifte-unit [c] [if c [tuple] [tuple]]]
[func ifte-tuple [c] [if c [tuple [i32 1337] c] [tuple [i32 21] c]]]
[func abs [x] [if [lt x [i32 0]] [sub [i32 0] x] x]]
[func let-test [p]
  [let [z [inc p]]
    z]]

[func fill [p w h]
  [if [is-negative p]
    [i32 -1]
    [let
      [end [add p [mul [i32 4] [mul w h]]]]
      end]]]

[func gauss [n] [div [mul n [add n [i32 1]]] [i32 2]]]

[func let-test2 [p]
  [let [x [inc p]
        y [inc x]]
    [tuple x y]]]
