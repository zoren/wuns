[memory mem [i32] 1]

[type vector-data [a datatype size [exp [i32]]]
  [record
    [size [i32]]
    [array [array a size]]]]

[type pmem [a datatype]
  [pointer [exp mem] a]]

[type pvector [vp datatype]
  [pmem [vector-data vp -size]]]

[defn size [pvec [pvector -a]] [i32]
  [deref [field pvec size]]]

[type growable-vector [a datatype]
  [record
    [size [i32]]
    [capacity [i32]]
    [parray [pmem [array a]]]]]

[def 0 [i32 0]]
[def 1 [i32 1]]

[defn get-byte [pvec [pvector [u8]] i [i32]] [i32]
  [when [lt-s i 0] [intrinsic unreachable]]
  [when-not [lt-s i [size pvec]] [intrinsic unreachable]]
  [deref-to [index [field pvec array] i] [i32]]]

[defn is-between-inclusive [lower [i32] c [i32] upper [i32]] [i32]
  [and [le-s lower c] [le-s c upper]]]

[defn is-whitespace [c [i32]] [i32]
  [or [eq c [i32 32]] [eq c [i32 10]]]]

[defn is-word-char [c [i32]] [i32]
  [or
    [is-between-inclusive [i32 97] c [i32 122]]
    [is-between-inclusive [i32 45] c [i32 57]]]]

[defn inc [x [i32]] [i32] [add x 1]]

[defn scan-word-end [bytes [pvector [u8]] start [i32]] [i32]
  [loop
    [n-of-bytes [size bytes]
     i start]
    [if-not [lt-s i n-of-bytes]
      i
      [if [is-word-char [get-byte bytes i]]
        [continue i [inc i]]
        i]]]]

[type pword []
  [pvector [u8]]]

[type form-word []
  [record
    [tag [exp [i32 10]]]
    [pword [pword]]]]

[type
  form-list []
  [record
    [tag [exp [i32 11]]]
    [forms [pvector [pmem [form]]]]]

  form []
  [union
    [form-word]
    [form-list]]]

[mutable mem-top [memory-static-top mem]]

[defn get-top [] [i32]
  mem-top]

[defn set-top [new-top [i32]] [tuple]
  [assign-mutable mem-top new-top]]

[defn alloc-n [n-bytes [i32]] [i32]
  [let [top-val [get-top]]
    [when [eq top-val 0] [intrinsic unreachable]]
    [set-top [add top-val n-bytes]]
    top-val]]

[defn form-word-alloc [pw [pword]] [pmem [form-word]]
  [let [pfw [cast [pmem [form-word]] [alloc-n [size-of [form-word]]]]]
    [assign pfw
      [record
        tag [i32 10]
        pword pw]]
    pfw]]

[defn form-list-alloc [pfs [pvector [pmem [form]]]] [pmem [form-list]]
  [let [pfl [cast [pmem [form-list]] [alloc-n [size-of [form-list]]]]]
    [assign pfl
      [record
        tag [i32 11]
        forms pfs]]
    pfl]]
