[defn make-operation-obj [name opcode immediate-parameters parameters results]
  [kv-map
    name name
    opcode opcode
    immediate-parameters immediate-parameters
    parameters parameters
    arity [add [size immediate-parameters] [size parameters]]
    results results]]

[def i32 [quote i32]]
[def immediate-u32 [quote immediate-u32]]
[def immediate-s32 [quote immediate-s32]]
[def empty-tuple [quote [tuple]]]

[defmacro make-binary-i32 [name opcode]
  [list [quote quote] [make-operation-obj name opcode [list] [list i32 i32] i32]]]

[def instructions
  [list
    [make-operation-obj [quote unreachable] [quote 0x00] [list] [list] empty-tuple]
    [make-operation-obj [quote nop] [quote 0x01] [list] [list] empty-tuple]

    [make-operation-obj [quote const] [quote 0x41] [list immediate-s32] [list] i32]

    [make-binary-i32 eq  0x46]
    [make-binary-i32 ne  0x47]
    [make-binary-i32 lt  0x48]
    [make-binary-i32 gt  0x4a]
    [make-binary-i32 le  0x4c]
    [make-binary-i32 ge  0x4e]

    [make-binary-i32 add 0x6a]
    [make-binary-i32 sub 0x6b]
    [make-binary-i32 mul 0x6c]
    [make-binary-i32 div 0x6d]

    [make-binary-i32 bitwise-and 0x71]
    [make-binary-i32 bitwise-ior 0x72]
    [make-binary-i32 bitwise-xor 0x73]

    [make-binary-i32 bitwise-shift-left 0x74]

    [make-operation-obj [quote load] [quote 0x28]
      [list immediate-u32 immediate-u32] [list i32] i32]
    [make-operation-obj [quote load8-signed] [quote 0x2c]
      [list immediate-u32 immediate-u32] [list i32] i32]
    [make-operation-obj [quote load8-unsigned] [quote 0x2d]
      [list immediate-u32 immediate-u32] [list i32] i32]

    [make-operation-obj [quote store] [quote 0x36]
      [list immediate-u32 immediate-u32] [list i32 i32] empty-tuple]
    [make-operation-obj [quote store8] [quote 0x3a]
      [list immediate-u32 immediate-u32] [list i32 i32] empty-tuple]
    [make-operation-obj [quote memory.size] [quote 0x3f]
      [list immediate-u32] [list] i32]
    [make-operation-obj [quote memory.grow] [quote 0x40]
      [list immediate-u32] [list i32] i32]
    [make-operation-obj [quote memory.init] [quote 0xfc 0x08]
      [list immediate-u32 immediate-u32] [list i32 i32 i32] empty-tuple]
    ]]

[def instructions-by-name
  [let [instructions-by-name [transient-kv-map]]
    [for-each instruction-obj instructions
      [set instructions-by-name [getq instruction-obj name] instruction-obj]]
    [persistent-kv-map instructions-by-name]]]

[defn get-instruction [name]
  [get instructions-by-name name]]
