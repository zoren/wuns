[is-word [form] [bool]]
[is-list [form] [bool]]
[size [list] [i32]]
[at [list i32] [any]]
[mutable-list-of-size [i32] [mutable-list]]
[set-array [mutable-list i32 any] []]
[freeze-mutable-list [mutable-list] []]
[meta [any] [any]]
[var [word] [var]]
[var-with-meta [word any kv-map] [var]]
[var-meta [var] [any]]
[var-get [var] [any]]
[insert-var [var] []]
[transient-kv-map [] [transient-kv-map]]
[set [transient-kv-map any any] []]
[log [list] []]
[atom [any] [atom]]
[atom-get [atom] [any]]
[atom-set [atom any] []]
[growable-list [] [growable-list]]
[push [growable-list any] []]
[concat-words [word word] [word]]
[char-code-at [word i32] [i32]]
[word-byte-size [word] [i32]]
[char-code-to-word [i32] [word]]
[freeze-kv-map [transient-kv-map] []]
[keys [transient-kv-map] [[list word]]]
[get [kv-map word] [any]]
[has [kv-map word] [bool]]
[delete-key [kv-map word] []]
[make-eval-context [] [eval-context]]
[apply [func [list any]] [any]]
[try-get-var [word] [[option var]]]
