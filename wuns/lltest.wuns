
[defn gauss-loop [n [i32]] [i32]
  [loop [res [i32 0] i n]
    [if i
      [continue
        res [intrinsic i32.add res i]
        i [intrinsic i32.sub i [i32 1]]]
      res]]]

[export gauss-loop]

[memory mem [i32] 1]

[def p-i32 [pointer [exp mem] [i32] [i32 16]]]

[defn get-i32 [] [i32]
  [deref p-i32]]

[def p-i64 [pointer [exp mem] [i64] [i32 16]]]

[defn get-i64 [] [i64]
  [deref p-i64]]
