[load check2.wuns]
[load test-check-gen.wuns]

[defn run-tests-check2 [tests]
  [let [tests-run-atom [atom 0]]
    [for-each test tests
      [match test
        [check-test/ok expected-type forms]
        [let [gctx [make-global-context]
              res [check-top-forms gctx forms]
              check-errors [clone-growable-to-frozen-list [check-context/messages gctx]]
              actual-type [normalize-present-type-scheme res]]
          [when-not [is-empty check-errors]
            [logq test-ok there were errors]
            [for-each message check-errors
              [log-check-message message]]
            [logq-abort test-ok failed there were errors]]
          [assert [eq-form actual-type expected-type] test-ok failed expected type [identity expected-type] but found [identity actual-type]]
          [inc-atom tests-run-atom]]

        [check-test/error expected-type expected-errors forms]
        [let [gctx [make-global-context]
              res [check-top-forms gctx forms]
              errors [clone-growable-to-frozen-list [check-context/messages gctx]]
              actual-type [normalize-present-type-scheme res]]
          [when-not [eq [size expected-errors] [size errors]]
            [log-location [first forms]]
            [logq different number of errors than expected]
            [logq expected]
            [for-each error expected-errors [log error]]
            [logq actual]
            [for-each error errors [log-check-message error]]
            [logq-abort test-error ]]

          [assert [eq-form actual-type expected-type] test-ok failed expected type [identity expected-type] but found [identity actual-type]]
          [inc-atom tests-run-atom]]]]
    [logq tests-run [atom-get tests-run-atom]]]]

[defn run-test-suite []
  [run-tests-check2 tests]]

[defn run-file [file-name]
  [let [gctx [make-global-context]
        forms [read-file file-name]
        res [check-top-forms gctx forms]
        check-errors [clone-growable-to-frozen-list [check-context/messages gctx]]
        actual-type [normalize-present-type-scheme res]]
    [when-not [is-empty check-errors]
      [logq test-ok there were errors]
      [for-each message check-errors
        [log-check-message message]]
      [logq-abort test-ok failed there were errors]]]]
